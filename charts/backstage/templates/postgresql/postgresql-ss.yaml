{{- if not .Values.postgres.external }}
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: {{ include "backstage.postgresql.name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "backstage.postgresql.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
        {{- include "backstage.postgresql.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      name: {{ include "backstage.postgresql.name" . }}
      creationTimestamp: null
      labels:
        {{- include "backstage.postgresql.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "backstage.postgres.serviceAccountName" . }}
      containers:
        - name: postgresql
          env:
            - name: POSTGRESQL_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  {{- include "backstage.postgresql.adminSecretKey" . | indent 18 }}
          ports:
            - name: tcp-postgresql
              containerPort: 5432
              protocol: TCP
{{- if .Values.postgres.storage.enabled }}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgresdb
{{- end }}
          terminationMessagePolicy: File
          imagePullPolicy: {{ .Values.postgres.image.pullPolicy }}
          image: "{{ template "backstage.image" .Values.postgres.image }}"
      serviceAccount: {{ include "backstage.serviceAccountName" . }}
{{- if .Values.postgres.storage.enabled }}
      volumes:
      - name: postgresdb
        persistentVolumeClaim:
          claimName: {{ include "backstage.postgresql.name" . }}
{{- end }}
  serviceName: {{ include "backstage.postgresql.name" . }}
{{- end }}

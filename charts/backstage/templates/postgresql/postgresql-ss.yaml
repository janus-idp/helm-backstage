{{- if not .Values.postgres.external }}
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: {{ include "backstage.postgresql.name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "backstage.postgresql.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.postgres.replicas }}
  serviceName: {{ include "backstage.postgresql.name" . }}
  selector:
    matchLabels:
        {{- include "backstage.postgresql.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      name: {{ include "backstage.postgresql.name" . }}
      creationTimestamp: null
      labels:
        {{- include "backstage.postgresql.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "backstage.postgres.serviceAccountName" . }}
      containers:
        - name: postgresql
          env:
            - name: POSTGRESQL_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  {{- include "backstage.postgresql.adminSecretKey" . | indent 18 }}
          ports:
            - name: tcp-postgresql
              containerPort: 5432
              protocol: TCP
{{- if .Values.postgres.storage.enabled }}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: data
{{- end }}
          terminationMessagePolicy: File
          imagePullPolicy: {{ .Values.postgres.image.pullPolicy }}
          image: "{{ template "backstage.image" .Values.postgres.image }}"
      serviceAccount: {{ include "backstage.serviceAccountName" . }}
{{- if not .Values.postgres.storage.enabled }}
      volumes:
      - name: data
        emptyDir: {}
{{- else }}
  volumeClaimTemplates:
    - metadata:
        name: data
        {{- if .Values.postgres.storage.annotations  }}
        annotations:
          {{- toYaml .Values.postgres.storage.annotations | nindent 10 }}
        {{- end }}
        labels:
          {{- include "backstage.postgresql.labels" . | nindent 10 }}
          {{- if .Values.postgres.storage.labels  }}
              {{- toYaml .Values.postgres.storage.labels | nindent 10 }}
          {{- end }}
      spec:
        accessModes:
        {{- range .Values.postgres.storage.accessModes }}
          - {{ . | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.postgres.storage.size }}
          {{- if .Values.postgres.storage.storageClass }}
            storageClassName: "{{ .Values.postgres.storage.storageClass }}"
          {{- end }}
            {{- if .Values.postgres.storage.selector }}
            selector:              
              {{- toYaml .Values.postgres.storage.selector | nindent 14 }}
            {{- end }}
{{- end }}
{{- end }}
